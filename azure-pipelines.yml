# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
# Linux
- bash: |
    sudo apt-get update
    sudo apt-get install -y cmake libcppunit-dev libgtk-3-dev libpoppler-glib-dev portaudio19-dev libsndfile-dev liblua5.3-dev libzip-dev
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'Install dependencies on Linux'
# macOS
- bash: |
    echo !!!TODO!!!
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Install dependencies on macOS'
# Windows
- bash: |
    pacman -Syuu --noconfirm
    pacman -S  --noconfirm mingw-w64-x86_64-cmake make mingw-w64-x86_64-toolchain
    pacman -S  --noconfirm --needed base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake

    pacman -S  --noconfirm mingw-w64-x86_64-poppler mingw-w64-x86_64-gtk3 mingw-w64-x86_64-libsndfile mingw-w64-x86_64-libzip
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: 'Install dependencies on Windows'

# Switch to the build directory
- bash: |
    mkdir build
    cd build
  displayName: 'Switch to build directory'

# Do the actual build
# Linux
- bash: |
    cmake .. -DCMAKE_DEBUG_INCLUDES_LDFLAGS=ON -DENABLE_CPPUNIT=ON -DDEBUG_COMPILE=ON
    make -j `grep processor /proc/cpuinfo | tail -c 2`
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'Build on Linux'
# macOS
- bash: |
    echo !!!TODO!!!
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Build on macOS'
# Windows
- bash: |
    ../windows-setup/build-portaudio.sh
    cmake ..
    make
    ../windows-setup/build-setup.sh
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: 'Build on Windows'

# Do some tests
# Linux
- bash: |
    ctest
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: 'Run tests on Linux'
# macOS
- bash: |
    echo !!!TODO!!!
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: 'Run tests on macOS'
# Windows
- bash: |
    echo !!!TODO!!!
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: 'Run tests on Windows'